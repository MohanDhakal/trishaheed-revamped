// Mocks generated by Mockito 5.4.4 from annotations
// in trishaheed/test/blog_repo_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:dio/dio.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:trishaheed/services/BaseApi.dart' as _i4;
import 'package:trishaheed/utilities/Error.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [BaseApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockBaseApi extends _i1.Mock implements _i4.BaseApi {
  @override
  _i2.Dio get dio => (super.noSuchMethod(
        Invocation.getter(#dio),
        returnValue: _FakeDio_0(
          this,
          Invocation.getter(#dio),
        ),
        returnValueForMissingStub: _FakeDio_0(
          this,
          Invocation.getter(#dio),
        ),
      ) as _i2.Dio);

  @override
  set dio(_i2.Dio? _dio) => super.noSuchMethod(
        Invocation.setter(
          #dio,
          _dio,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<_i3.Either<_i2.Response<dynamic>, _i6.Failure>> post(
    Map<String, dynamic>? data,
    String? path, [
    bool? hasImage = false,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [
            data,
            path,
            hasImage,
          ],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i2.Response<dynamic>, _i6.Failure>>.value(
                _FakeEither_1<_i2.Response<dynamic>, _i6.Failure>(
          this,
          Invocation.method(
            #post,
            [
              data,
              path,
              hasImage,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i2.Response<dynamic>, _i6.Failure>>.value(
                _FakeEither_1<_i2.Response<dynamic>, _i6.Failure>(
          this,
          Invocation.method(
            #post,
            [
              data,
              path,
              hasImage,
            ],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i2.Response<dynamic>, _i6.Failure>>);

  @override
  _i5.Future<_i3.Either<_i2.Response<dynamic>, _i6.Failure>> get(
    String? path, [
    Map<String, dynamic>? queryParameters,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [
            path,
            queryParameters,
          ],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i2.Response<dynamic>, _i6.Failure>>.value(
                _FakeEither_1<_i2.Response<dynamic>, _i6.Failure>(
          this,
          Invocation.method(
            #get,
            [
              path,
              queryParameters,
            ],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i2.Response<dynamic>, _i6.Failure>>.value(
                _FakeEither_1<_i2.Response<dynamic>, _i6.Failure>(
          this,
          Invocation.method(
            #get,
            [
              path,
              queryParameters,
            ],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i2.Response<dynamic>, _i6.Failure>>);

  @override
  _i5.Future<_i3.Either<_i2.Response<dynamic>, _i6.Failure>> delete(
          String? path) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [path],
        ),
        returnValue:
            _i5.Future<_i3.Either<_i2.Response<dynamic>, _i6.Failure>>.value(
                _FakeEither_1<_i2.Response<dynamic>, _i6.Failure>(
          this,
          Invocation.method(
            #delete,
            [path],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.Either<_i2.Response<dynamic>, _i6.Failure>>.value(
                _FakeEither_1<_i2.Response<dynamic>, _i6.Failure>(
          this,
          Invocation.method(
            #delete,
            [path],
          ),
        )),
      ) as _i5.Future<_i3.Either<_i2.Response<dynamic>, _i6.Failure>>);
}
